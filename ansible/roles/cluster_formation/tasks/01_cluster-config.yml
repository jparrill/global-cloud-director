---
  ## Auth cluster nodes into PCS
  - name: PCS Auth
    command: pcs cluster auth {{ cluster_node_1 }} {{ cluster_node_2 }} {{ cluster_node_3 }} -u hacluster -p {{ cluster_pass }} --force
    run_once: yes

  - name: PCS Setup
    command: pcs cluster setup --name {{ cluster_name }} {{ cluster_node_1 }} {{ cluster_node_2 }} {{ cluster_node_3 }} --force
    when: inventory_hostname_short == "{{ cluster_node_1 }}"
    notify:
      - Cluster Service Enable
      - Cluster Service Start

  - meta: flush_handlers

  ## Added dummy command to get UUID from vcenter and use it into real environment
  # Just change the shell command to consume it
  - name: Get Nodes UUID
    shell: echo "{{ item }}" | sha1sum | awk '{print $1}'
    register: UUIDs
    #command: fence_vmware_soap -a "{{ vcenter }}" -l "{{ vc_user }}" -p "{{ iaas_pass }}" --ssl-insecure -z -o list | grep "{{ item }}" | awk -F, '{print $2}'
    when: inventory_hostname_short == "{{ cluster_node_1 }}"
    with_items:
      - "{{ cluster_node_1 }}"
      - "{{ cluster_node_2 }}"
      - "{{ cluster_node_3 }}"

  - debug: var="UUIDs"
    when: inventory_hostname_short == "{{ cluster_node_1 }}"

  - debug: msg="System {{ item.node }} has uuid {{ item.uuid }}"
    when: inventory_hostname_short == "{{ cluster_node_1 }}"
    with_items:
      - { node: "{{ cluster_node_1 }}", uuid: "{{ UUIDs.results[0].stdout }}" }
      - { node: "{{ cluster_node_2 }}", uuid: "{{ UUIDs.results[1].stdout }}" }
      - { node: "{{ cluster_node_3 }}", uuid: "{{ UUIDs.results[2].stdout }}" }

  #- name: Config Stonith Fencing
  #  command: >
  #    pcs stonith create fence-"{{ item.node }}" fence_vmware_soap
  #    ipaddr="{{ VCENTER }}"
  #    ssl=1 ssl_insecure=1
  #    login="{{ VC_USER }}"
  #    passwd="{{ IAAS_PASS }}"
  #    action='reboot'
  #    port="{{ item.node_uuid }}"
  #    pcmk_host_list="{{ item.node }}"
  #  with_items:
  #    - { node: "{{ cluster_node_1 }}", node_uuid: "{{ cluster_node_1_uuid }}" }
  #    - { node: "{{ cluster_node_2 }}", node_uuid: "{{ cluster_node_2_uuid }}" }
  #    - { node: "{{ cluster_node_3 }}", node_uuid: "{{ cluster_node_3_uuid }}" }
  #  run_once: true
